ALTER TABLE UM_DOMAIN
ALTER COLUMN UM_DOMAIN_NAME SET NOT NULL;

ALTER TABLE UM_HYBRID_ROLE
ALTER COLUMN UM_ROLE_NAME SET NOT NULL;

ALTER TABLE UM_SYSTEM_ROLE
ALTER COLUMN UM_ROLE_NAME SET NOT NULL;

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME='UC_UM_DOMAIN')
ALTER TABLE UM_DOMAIN ADD CONSTRAINT UC_UM_DOMAIN UNIQUE(UM_DOMAIN_NAME,UM_TENANT_ID);

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME='UC_UM_HYBRID_ROLE')
ALTER TABLE UM_HYBRID_ROLE ADD CONSTRAINT UC_UM_HYBRID_ROLE UNIQUE(UM_ROLE_NAME,UM_TENANT_ID);

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME='UC_UM_SYSTEM_ROLE')
ALTER TABLE UM_SYSTEM_ROLE ADD CONSTRAINT UC_UM_SYSTEM_ROLE UNIQUE(UM_ROLE_NAME,UM_TENANT_ID);

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME='UNIQUE_REG_PATH_TENANT_ID')
ALTER TABLE UM_SYSTEM_ROLE ADD CONSTRAINT UNIQUE_REG_PATH_TENANT_ID UNIQUE(REG_PATH_VALUE,REG_TENANT_ID);

IF NOT EXISTS (SELECT * FROM SYS.indexes WHERE name = 'UM_ROLE_NAME_IND' and object_id = OBJECT_ID('UM_HYBRID_ROLE'))
CREATE INDEX UM_ROLE_NAME_IND ON UM_HYBRID_ROLE (UM_ROLE_NAME);